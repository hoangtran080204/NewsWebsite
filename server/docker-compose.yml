version: "3.8"

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile.flask
    env_file: .env
    ports:
      - "80:80"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

  celery-worker:
    build:
      context: .
      dockerfile: Dockerfile.celery
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    command: celery -A tasks.celery worker --loglevel=info

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile.celery
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    command: celery -A tasks.celery beat --loglevel=info

  db:
    image: postgres:14-alpine
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    container_name: postgres_db_container
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 30s

  redis:
    image: redis:7-alpine

volumes:
  postgres-data:
